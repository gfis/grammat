/.BASIC LOGON
/DO DO.EXTRA,('(PRIMARY)',PARM='ASSERT=200,NOSPLIT')
END_OF_LINE IDENTIFIER INTEGER STRING_CONSTANT
[AXIOM = BASIC
.BASIC = PROGRAM
 /*------------------------------------------------------------------*/
 /*  MINIMAL  B A S I C                                              */
 /*  ANSI X3.60-1978                                                 */
 /*------------------------------------------------------------------*/
 
 /* 4. PROGRAMS */
 
.PROGRAM = BLOCK END_LINE
.BLOCK = 
       | BLOCK LINE
       | BLOCK FOR_BLOCK
.LINE = LINE_NUMBER STATEMENT END_OF_LINE
.LINE_NUMBER = NUMBER
.END_LINE = LINE_NUMBER END_STATEMENT END_OF_LINE
.END_STATEMENT = END
.STATEMENT = DATA_STATEMENT
           | DEF_STATEMENT
           | DIMENSION_STATEMENT
           | GOSUB_STATEMENT
           | GOTO_STATEMENT
           | IF_THEN_STATEMENT
           | INPUT_STATEMENT
           | LET_STATEMENT
           | ON_GOTO_STATEMENT
           | OPTION_STATEMENT
           | PRINT_STATEMENT
           | RANDOMIZE_STATEMENT
           | READ_STATEMENT
           | REMARK_STATEMENT
           | RESTORE_STATEMENT
           | RETURN_STATEMENT
           | STOP_STATEMENT
 
 /* 9. LET-STATEMENT */
 
.LET_STATEMENT = NUMERIC_LET_STATEMENT
               | STRING_LET_STATEMENT
.NUMERIC_LET_STATEMENT = LET NUMERIC_VARIABLE '=' NUMERIC_EXPRESSION
.STRING_LET_STATEMENT   = LET STRING_VARIABLE  '=' STRING_EXPRESSION
 
 /* 10. CONTROL STATEMENTS */
 
.GOTO_STATEMENT = GOTO_SYMBOL LINE_NUMBER
.GOTO_SYMBOL = GO TO | GOTO
.IF_THEN_STATEMENT = IF RELATIONAL_EXPRESSION THEN LINE_NUMBER
.RELATIONAL_EXPRESSION = NUMERIC_EXPRESSION RELATION NUMERIC_EXPRESSION
               | STRING_EXPRESSION EQUALITY_RELATION STRING_EXPRESSION
.RELATION = EQUALITY_RELATION
          | '<'
          | '>'
          | '>='
          | '<='
.EQUALITY_RELATION = '='
                   | '<>'
.GOSUB_STATEMENT = GOSUB_SYMBOL LINE_NUMBER
.GOSUB_SYMBOL = GO SUB | GOSUB
.RETURN_STATEMENT = RETURN
.ON_GOTO_STATEMENT = ON NUMERIC_EXPRESSION GOTO_SYMBOL LINE_NUMBER
   | ON_GOTO_STATEMENT ',' LINE_NUMBER
.STOP_STATEMENT = STOP
 
 /* 11. FOR-STATEMENTS AND NEXT-STATEMENTS */
 
.FOR_BLOCK = FOR_LINE  FOR_BODY
.FOR_BODY = BLOCK  NEXT_LINE
.FOR_LINE = LINE_NUMBER FOR_STATEMENT END_OF_LINE
.NEXT_LINE = LINE_NUMBER NEXT_STATEMENT END_OF_LINE
.FOR_STATEMENT = FOR CONTROL_VARIABLE '=' INITIAL_VALUE TO LIMIT
                   STEP_OPTION
.STEP_OPTION =
             | STEP INCREMENT
.CONTROL_VARIABLE = SIMPLE_NUMERIC_VARIABLE
.INITIAL_VALUE = NUMERIC_EXPRESSION
.LIMIT         = NUMERIC_EXPRESSION
.INCREMENT     = NUMERIC_EXPRESSION
.NEXT_STATEMENT = NEXT CONTROL_VARIABLE
 
 /* 12. PRINT-STATEMENT */
 
.PRINT_STATEMENT = PRINT PRINT_LIST
.PRINT_LIST = 
            | PRINT_LIST PRINT_ITEM
            | PRINT_LIST PRINT_SEPARATOR
.PRINT_ITEM = EXPRESSION
            | TAB_CALL
.TAB_CALL = TAB '(' NUMERIC_EXPRESSION ')'
.PRINT_SEPARATOR = ','
                 | ';'
 
 /* 13. INPUT-STATEMENT */
 
.INPUT_STATEMENT = INPUT VARIABLE_LIST
.VARIABLE_LIST = VARIABLE
               | VARIABLE_LIST ',' VARIABLE
  
 /* 14. DATA-, READ- AND RESTORE-STATEMENTS */
 
.DATA_STATEMENT = DATA DATA_LIST
.READ_STATEMENT = READ VARIABLE_LIST
.RESTORE_STATEMENT = RESTORE
.DATA_LIST = DATUM
           | DATA_LIST ',' DATUM
.DATUM = STRING_CONSTANT
       | NUMERIC_CONSTANT
 
 /* 15. ARRAY-DECLARATIONS */
 
.DIMENSION_STATEMENT = DIM ARRAY_DECLARATION
                     | DIMENSION_STATEMENT ',' ARRAY_DECLARATION
.ARRAY_DECLARATION = NUMERIC_ARRAY '(' BOUNDS ')'
.BOUNDS = INTEGER
        | BOUNDS ',' INTEGER
.OPTION_STATEMENT = OPTION BASE 0
                  | OPTION BASE 1
 
 /* 16. USER-DEFINED FUNCTIONS */
 
.DEF_STATEMENT = DEF NUMERIC_DEFINED_FUNCTION PARAMETER_LIST_OPTION 
                   '=' NUMERIC_EXPRESSION
.NUMERIC_DEFINED_FUNCTION = FN IDENTIFIER
.PARAMETER_LIST_OPTION =
                       | PARAMETER_LIST
.PARAMETER_LIST = '(' PARAMETER ')'
.PARAMETER = SIMPLE_NUMERIC_VARIABLE
 
 /* 17. RANDOMIZE-STATEMENT */
 
.RANDOMIZE_STATEMENT = RANDOMIZE
 
 /* 18. REM-STATEMENT */
 
.REMARK_STATEMENT = REM REM_STRING
.REM_STRING =
    VARIABLE
  | NUMERIC_CONSTANT
  | STRING_CONSTANT
 
 /* 5. CONSTANTS */
 
.NUMERIC_CONSTANT = SIGN NUMERIC_REP
             | NUMERIC_REP
.SIGN = '+'
      | '-'
.NUMERIC_REP = SIGNIFICAND EXRAD
             | SIGNIFICAND
.SIGNIFICAND = INTEGER
             | INTEGER PERIOD
             | FRACTION
             | INTEGER FRACTION
.FRACTION = PERIOD INTEGER
.EXRAD = E SIGN_OPTION INTEGER
.SIGN_OPTION =
             | SIGN
 
 /* 6. VARIABLES */
 
.VARIABLE = NUMERIC_VARIABLE
          | STRING_VARIABLE
.NUMERIC_VARIABLE = SIMPLE_NUMERIC_VARIABLE
                  | NUMERIC_ARRAY_ELEMENT
.SIMPLE_NUMERIC_VARIABLE = IDENTIFIER
.NUMERIC_ARRAY_ELEMENT = IDENTIFIER SUBSCRIPT
.SUBSCRIPT = '(' NUMERIC_EXPRESSION_LIST ')'
.NUMERIC_EXPRESSION_LIST = NUMERIC_EXPRESSION
   | NUMERIC_EXPRESSION_LIST ',' NUMERIC_EXPRESSION
.STRING_VARIABLE = IDENTIFIER '$'
 
 /* 7. EXPRESSIONS */
 
.EXPRESSION = NUMERIC_EXPRESSION
            | STRING_EXPRESSION
.NUMERIC_EXPRESSION = SIGN TERM
               | TERM
                    | NUMERIC_EXPRESSION SIGN TERM
.TERM = FACTOR
      | TERM MULTIPLIER FACTOR
.FACTOR = PRIMARY
        | FACTOR '**' PRIMARY
.MULTIPLIER = '*'
            | '/'
.PRIMARY = NUMERIC_VARIABLE
         | NUMERIC_REP
         | NUMERIC_FUNCTION_REF
         | '(' NUMERIC_EXPRESSION ')'
.NUMERIC_FUNCTION_REF = NUMERIC_FUNCTION_NAME ARGUMENT_LIST
                   | NUMERIC_FUNCTION_NAME
.NUMERIC_FUNCTION_NAME = NUMERIC_DEFINED_FUNCTION
                       | NUMERIC_SUPPLIED_FUNCTION
.ARGUMENT_LIST = '(' ARGUMENT ')'
.ARGUMENT = NUMERIC_EXPRESSION
.STRING_EXPRESSION = STRING_VARIABLE
                   | STRING_CONSTANT
 
 /* 8. IMPLEMENTATION-SUPPLIED FUNCTIONS */
 /*
.NUMERIC_SUPPLIED_FUNCTION = 
     ABS
   | ATN
   | COS
   | EXP
   | INT
   | LOG
   | RND
   | SGN
   | SQR
   | TAN
 */
.
]
/.LOGO LOGOFF
