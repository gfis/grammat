/.EULER LOGON
/.EULER    DO DO.EXTRA,('(PRIMARY)')
      /*   E U L E R   */
EOF LAMBDA NUMBER STRING
[AXIOM = BLOCK.
 /*1001*/ VARDECL = NEW LAMBDA.
 /*1002*/ FORDECL = FORMAL LAMBDA.
 /*1003*/ LABDECL = LABEL LAMBDA.
 /*1004*/ VAR_M = LAMBDA | VAR_M SUB EXPR BUS | VAR_M POINT.
 /*1007*/ VAR = VAR_M.
 /*1008*/ LOGVAL = TRUE | FALSE.
 /*1020*/ INTEGER_M = DIGIT | INTEGER_M DIGIT.
 /*1022*/ INTEGER_S = INTEGER_M.
 /*1023*/ REAL_S = INTEGER_S POINT INTEGER_S | INTEGER_S.
 /*1025*/ NUMBER = REAL_S | REAL_S TEN INTEGER_S | REAL_S TEN MONADIC_MINUS,
        INTEGER_S | TEN INTEGER_S | TEN MONADIC_MINUS INTEGER_S.
 /*1030*/ REFERENCE = AT VAR.
 /*1031*/ LISTHEAD = LISTHEAD EXPR COMMA | OPEN.
 /*1033*/ LIST_S = LISTHEAD EXPR CLOSE | LISTHEAD CLOSE.
 /*1035*/ PROCHEAD = PROCHEAD FORDECL SEMICOLON | LEFT_QUOTE.
 /*1037*/ PROCDEF = PROCHEAD EXPR RIGHT_QUOTE.
 /*1038*/ PRIMARY = VAR | VAR LIST_S | LOGVAL | NUMBER | SIGMA | REFERENCE |
        LIST_S | TAIL PRIMARY | PROCDEF | OMEGA | SUB EXPR BUS | IN |
        ISB VAR | ISN VAR | ISR VAR | ISL VAR | ISLI VAR | ISY VAR |
        ISP VAR | ISU VAR | ABS PRIMARY | LENGTH VAR | INTEGER PRIMARY |
        REAL PRIMARY | LOGICAL PRIMARY | LIST PRIMARY.
 /*1064*/ FACTOR_M = PRIMARY | FACTOR_M UP PRIMARY.
 /*1066*/ FACTOR = FACTOR_M.
 /*1067*/ TERM_M = FACTOR | TERM_M TIMES FACTOR | TERM_M DIVIDED_BY FACTOR |
        TERM_M OVER FACTOR | TERM_M MODULO FACTOR.
 /*1072*/ TERM = TERM_M.
 /*1073*/ SUM_M = TERM | PLUS TERM | MINUS TERM | SUM_M PLUS TERM | SUM_M,
        MINUS TERM.
 /*1078*/ SUM = SUM_M.
 /*1079*/ CHOICE_M = SUM | CHOICE_M MIN SUM | CHOICE_M MAX SUM.
 /*1082*/ CHOICE = CHOICE_M.
 /*1083*/ RELATION = CHOICE | CHOICE EQUAL CHOICE | CHOICE NOTEQUAL CHOICE |
        CHOICE LESS CHOICE | CHOICE LE CHOICE | CHOICE GE CHOICE |
        CHOICE GREATER CHOICE.
 /*1090*/ NEGATION = RELATION | NOT RELATION.
 /*1092*/ CONJHEAD = NEGATION AND.
 /*1093*/ CONJ_M = CONJHEAD CONJ_M | NEGATION.
 /*1095*/ CONJ = CONJ_M.
 /*1096*/ DISJHEAD = CONJ OR.
 /*1097*/ DISJ = DISJHEAD DISJ | CONJ.
 /*1099*/ CATENA = CATENA CONC PRIMARY | DISJ.
 /*1101*/ TRUEPART = EXPR ELSE.
 /*1102*/ IFCLAUSE = IF EXPR THEN.
 /*1103*/ EXPR_M = BLOCK | IFCLAUSE TRUEPART EXPR_M | VAR BECOMES EXPR_M |
        GOTO PRIMARY | OUT EXPR_M | CATENA.
 /*1109*/ EXPR = EXPR_M.
 /*1110*/ STAT_M = LABDEF STAT_M | EXPR.
 /*1112*/ STAT = STAT_M.
 /*1113*/ LABDEF = LAMBDA COLON.
 /*1114*/ BLOCKHEAD = BEGIN | BLOCKHEAD VARDECL SEMICOLON |
        BLOCKHEAD LABDECL SEMICOLON.
 /*1117*/ BLOCKBODY = BLOCKHEAD | BLOCKBODY STAT SEMICOLON.
 /*1119*/ BLOCK = BLOCKBODY STAT END.
]
/LOGOFF
M.

  29.
