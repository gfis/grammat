/.PAL LOGON
/DO DO.EXTRA,('(PRIMARY)',PARM='ASSERT=200,SINGLE')
EOF IDENTIFIER NUMBER STRING
[AXIOM = PAL_PROGRAM
 /*-------------------------------------------------------------------*/
 /*  P A L    PEDAGOGIC ALGORITHMIC LANGUAGE                          */
 /*  WOZENCRAFT, J.M., AND EVANS, A., JR.:                            */
 /*  NOTES ON PROGRAMMING LINGUISTICS.                                */
 /*  DEPARTMENT OF ELECTRICAL ENGINEERING, MASSACHUSETTS INSTITUTE OF */
 /*  TECHNOLOGY, CAMBRIDGE, MASS., JULY 1969                          */
 /*  REPRINTED IN AHO/ULLMAN  THE THEORY OF PARSING, TRANSLATION, AND */
 /*  COMPILING, VOL. 1, PP. 512-517                                   */
 /*-------------------------------------------------------------------*/
.PAL_PROGRAM = DEFINITION_LIST
             | EXPRESSION
.DEFINITION_LIST = DEF DEFINITION DEFINITION_LIST
                 | DEF DEFINITION
.EXPRESSION = LET DEFINITION IN EXPRESSION
            | FN BV_PART '.' EXPRESSION
            | WHERE_EXPRESSION
.WHERE_EXPRESSION = VALOF_EXPRESSION WHERE REC_DEFINITION
                  | VALOF_EXPRESSION
.VALOF_EXPRESSION = VALOF COMMAND
                  | COMMAND
.COMMAND = LABELED_COMMAND ';' COMMAND
         | LABELED_COMMAND
.LABELED_COMMAND = VARIABLE ':' LABELED_COMMAND
                 | CONDITIONAL_COMMAND
.CONDITIONAL_COMMAND = TEST BOOLEAN IFSO  LABELED_COMMAND IFNOT LABELED_COMMAND
                     | TEST BOOLEAN IFNOT LABELED_COMMAND IFSO  LABELED_COMMAND
                     | IF     BOOLEAN DO  LABELED_COMMAND
                     | UNLESS BOOLEAN DO  LABELED_COMMAND
                     | WHILE  BOOLEAN DO  LABELED_COMMAND
                     | UNTIL  BOOLEAN DO  LABELED_COMMAND
                     | BASIC_COMMAND
.BASIC_COMMAND = TUPLE ':=' TUPLE
               | GOTO COMBINATION
               | RES TUPLE
               | TUPLE
.TUPLE = T1
       | T1 ',' TUPLE
.T1 = T1 AUG CONDITIONAL_EXPRESSION
    | CONDITIONAL_EXPRESSION
.CONDITIONAL_EXPRESSION = BOOLEAN '->' CONDITIONAL_EXPRESSION '|'
                            CONDITIONAL_EXPRESSION
                        | T2
.T2 = '$' COMBINATION
    | BOOLEAN
.BOOLEAN = BOOLEAN OR CONJUNCTION
         | CONJUNCTION
.CONJUNCTION = CONJUNCTION '&' NEGATION
             | NEGATION
.NEGATION = NOT RELATION
          | RELATION
.RELATION = ARITHMETIC_EXPRESSION RELATIONAL_FUNCTOR ARITHMETIC_EXPRESSION
          | ARITHMETIC_EXPRESSION
.ARITHMETIC_EXPRESSION = ARITHMETIC_EXPRESSION '+' TERM
                       | ARITHMETIC_EXPRESSION '-' TERM
                       |                       '+' TERM
                       |                       '-' TERM
                       |                           TERM
.TERM = TERM '*' FACTOR
      | TERM '/' FACTOR
      |          FACTOR
.FACTOR = PRIMARY '**' FACTOR
        | PRIMARY
.PRIMARY = PRIMARY '%' VARIABLE COMBINATION
       | COMBINATION
.COMBINATION = COMBINATION RAND
             | RAND
.RAND = VARIABLE
      | CONSTANT
      | '(' EXPRESSION ')'
      | '(/' EXPRESSION '/)'
.DEFINITION = INWHICH_DEFINITION WITHIN DEFINITION
            | INWHICH_DEFINITION
.INWHICH_DEFINITION = INWHICH_DEFINITION INWHICH SIMULTANEOUS_DEFINITION
                    |                            SIMULTANEOUS_DEFINITION
.SIMULTANEOUS_DEFINITION = REC_DEFINITION AND SIMULTANEOUS_DEFINITION
                         | REC_DEFINITION
.REC_DEFINITION = REC BASIC_DEFINITION
               | BASIC_DEFINITION
.BASIC_DEFINITION = VARIABLE_LIST '=' EXPRESSION
                  | VARIABLE BV_PART '=' EXPRESSION
                  | '(' DEFINITION ')'
                  | '(/' DEFINITION '/)'
.BV_PART = BASIC_BV BV_PART
         |         BASIC_BV
.BASIC_BV = VARIABLE
          | '(' VARIABLE_LIST ')'
          | '(' ')'
.VARIABLE_LIST = VARIABLE ',' VARIABLE_LIST
               | VARIABLE
 /*
.CONSTANT = INTEGER
          | REAL
          | QUOTATION
          | TRUTHVALUE
          | E
.RELATIONAL_FUNCTOR = GR | GE | EQ | LS | LE
.TRUTHVALUE = TRUE | FALSE
.REAL = INTEGER '.' INTEGER
 */
.
]
/LOGOFF
